import type { NextPage } from "next";
import Head from "next/head";
import { IState, useStore } from "../store";
import styles from "../styles/Home.module.css";

// It is generally recommended to memoize selectors with useCallback.
// This will prevent unnecessary computations each render.
// It also allows React to optimize performance in concurrent mode.

// If a selector doesn't depend on scope
// you can define it outside the render function
// to obtain a fixed reference without useCallback.

const bearsSelector = (state: IState) => state.bears;
const increaseBearPopulationSelector = (state: IState) => state.increaseBearPopulation;

const Home: NextPage = () => {
  const bears = useStore(bearsSelector);
  const increaseBearPopulation = useStore(increaseBearPopulationSelector);
  const increaseBearCount = () => increaseBearPopulation(1);

  return (
    <div className={styles.container}>
      <Head>
        <title>Zustand Next.js Tailwind Typescript Demo</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>Number of Bears: {bears}</main>
      <button className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded" onClick={() => increaseBearCount()}>Add a Bear</button>
    </div>
  );
};

export default Home;
